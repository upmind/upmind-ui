/* aria */
@layer utilities {
  /* Boolean aria attributes */
  .aria-atomic[aria-atomic="true"] {
  }
  .aria-busy[aria-busy="true"] {
  }
  .aria-checked[aria-checked="true"] {
  }
  .aria-current[aria-current="true"] {
  }
  .aria-disabled[aria-disabled="true"] {
  }
  .aria-expanded[aria-expanded="true"] {
  }
  .aria-grabbed[aria-grabbed="true"] {
  }
  .aria-haspopup[aria-haspopup="true"] {
  }
  .aria-hidden[aria-hidden="true"] {
  }
  .aria-invalid[aria-invalid="true"] {
  }
  .aria-live[aria-live="true"] {
  }
  .aria-modal[aria-modal="true"] {
  }
  .aria-multiline[aria-multiline="true"] {
  }
  .aria-multiselectable[aria-multiselectable="true"] {
  }
  .aria-pressed[aria-pressed="true"] {
  }
  .aria-readonly[aria-readonly="true"] {
  }
  .aria-required[aria-required="true"] {
  }
  .aria-selected[aria-selected="true"] {
  }

  /* Enum aria attributes */
  .aria-autocomplete-both[aria-autocomplete="both"] {
  }
  .aria-autocomplete-inline[aria-autocomplete="inline"] {
  }
  .aria-autocomplete-list[aria-autocomplete="list"] {
  }
  .aria-autocomplete-none[aria-autocomplete="none"] {
  }

  .aria-current-date[aria-current="date"] {
  }
  .aria-current-location[aria-current="location"] {
  }
  .aria-current-page[aria-current="page"] {
  }
  .aria-current-step[aria-current="step"] {
  }
  .aria-current-time[aria-current="time"] {
  }

  .aria-dropeffect-copy[aria-dropeffect="copy"] {
  }
  .aria-dropeffect-execute[aria-dropeffect="execute"] {
  }
  .aria-dropeffect-link[aria-dropeffect="link"] {
  }
  .aria-dropeffect-move[aria-dropeffect="move"] {
  }
  .aria-dropeffect-none[aria-dropeffect="none"] {
  }
  .aria-dropeffect-popup[aria-dropeffect="popup"] {
  }

  .aria-haspopup-dialog[aria-haspopup="dialog"] {
  }
  .aria-haspopup-grid[aria-haspopup="grid"] {
  }
  .aria-haspopup-listbox[aria-haspopup="listbox"] {
  }
  .aria-haspopup-menu[aria-haspopup="menu"] {
  }
  .aria-haspopup-tree[aria-haspopup="tree"] {
  }

  .aria-orientation-horizontal[aria-orientation="horizontal"] {
  }
  .aria-orientation-undefined[aria-orientation="undefined"] {
  }
  .aria-orientation-vertical[aria-orientation="vertical"] {
  }

  .aria-relevant-additions[aria-relevant="additions"] {
  }
  .aria-relevant-all[aria-relevant="all"] {
  }
  .aria-relevant-removals[aria-relevant="removals"] {
  }
  .aria-relevant-text[aria-relevant="text"] {
  }

  .aria-sort-ascending[aria-sort="ascending"] {
  }
  .aria-sort-descending[aria-sort="descending"] {
  }
  .aria-sort-none[aria-sort="none"] {
  }
  .aria-sort-other[aria-sort="other"] {
  }
}
@utility shadow-border-* {
  --tw-shadow: inset 0 0 0 1px --value(--color-*);
  box-shadow:
    var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
    var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}

@utility shadow-border-b-* {
  --tw-shadow: inset 0 -1px 0 0 --value(--color-*);
  box-shadow:
    var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
    var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}

@utility shadow-border-t-* {
  --tw-shadow: inset 0 1px 0 0 --value(--color-*);
  box-shadow:
    var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
    var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}

@utility shadow-border-l-* {
  --tw-shadow: inset 1px 0 0 0 --value(--color-*);
  box-shadow:
    var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
    var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}

@utility shadow-border-r-* {
  --tw-shadow: inset -1px 0 0 0 --value(--color-*);
  box-shadow:
    var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
    var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}

@utility shadow-border-l-none-* {
  --tw-shadow:
    inset 0 1px 0 0 --value(--color-*), inset -1px 0 0 0 --value(--color-*),
    inset 0 -1px 0 0 --value(--color-*);
  box-shadow:
    var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
    var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}

@utility shadow-border-r-none-* {
  --tw-shadow:
    inset 0 1px 0 0 --value(--color-*), inset 1px 0 0 0 --value(--color-*),
    inset 0 -1px 0 0 --value(--color-*);
  box-shadow:
    var(--tw-inset-shadow), var(--tw-inset-ring-shadow),
    var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
}

/* typography */
@layer utilities {
  .text-xs\/tight {
    font-size: var(--text-xs);
    line-height: var(--text-xs--line-height-tight);
  }
  .text-xs\/loose {
    font-size: var(--text-xs);
    line-height: var(--text-xs--line-height-loose);
  }
  .text-sm\/tight {
    font-size: var(--text-sm);
    line-height: var(--text-sm--line-height-tight);
  }
  .text-sm\/loose {
    font-size: var(--text-sm);
    line-height: var(--text-sm--line-height-loose);
  }
  .text-md\/tight {
    font-size: var(--text-md);
    line-height: var(--text-md--line-height-tight);
  }
  .text-md\/loose {
    font-size: var(--text-md);
    line-height: var(--text-md--line-height-loose);
  }
  .text-lg\/tight {
    font-size: var(--text-lg);
    line-height: var(--text-lg--line-height-tight);
  }
  .text-lg\/loose {
    font-size: var(--text-lg);
    line-height: var(--text-lg--line-height-loose);
  }
  .text-xl\/tight {
    font-size: var(--text-xl);
    line-height: var(--text-xl--line-height-tight);
  }
  .text-xl\/loose {
    font-size: var(--text-xl);
    line-height: var(--text-xl--line-height-loose);
  }
  .text-2xl\/tight {
    font-size: var(--text-2xl);
    line-height: var(--text-2xl--line-height-tight);
  }
  .text-2xl\/loose {
    font-size: var(--text-2xl);
    line-height: var(--text-2xl--line-height-loose);
  }
  .text-3xl\/tight {
    font-size: var(--text-3xl);
    line-height: var(--text-3xl--line-height-tight);
  }
  .text-3xl\/loose {
    font-size: var(--text-3xl);
    line-height: var(--text-3xl--line-height-loose);
  }
  .text-4xl\/tight {
    font-size: var(--text-4xl);
    line-height: var(--text-4xl--line-height-tight);
  }
  .text-4xl\/loose {
    font-size: var(--text-4xl);
    line-height: var(--text-4xl--line-height-loose);
  }
  .text-5xl\/tight {
    font-size: var(--text-5xl);
    line-height: var(--text-5xl--line-height-tight);
  }
  .text-5xl\/loose {
    font-size: var(--text-5xl);
    line-height: var(--text-5xl--line-height-loose);
  }
  .text-6xl\/tight {
    font-size: var(--text-6xl);
    line-height: var(--text-6xl--line-height-tight);
  }
  .text-6xl\/loose {
    font-size: var(--text-6xl);
    line-height: var(--text-6xl--line-height-loose);
  }
}

/* Autofill */
@layer utilities {
  .autofill:has(input:autofill) {
    @apply bg-[var(--color-autofill,var(--color-blue-50))];
  }

  .autofill input:-webkit-autofill {
    box-shadow: 0 0 0 1000px var(--color-autofill, var(--color-blue-50)) inset !important;
    -webkit-text-fill-color: inherit !important;
  }
}
